<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">

    <description>框架持久层配置</description>

    <!--<context:property-placeholder location="classpath:conf/jdbc.properties" />-->

    <!--<context:component-scan base-package="com.zhph.**.dao" />-->
    <!--支付平台数据源-->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/PAYMENT_DB"/>
    </bean>

    <!--<bean id="dataSource" class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" destroy-method="close">
        <property name="uniqueResourceName" value="dataSource" />
        <property name="driverClassName" value="${payment.driverClassName}" />
        <property name="url" value="${payment.url}" />
        <property name="user" value="${payment.username}" />
        <property name="password" value="${payment.password}" />
        <property name="poolSize" value="5" />
        <property name="minPoolSize" value="5" />
        <property name="maxPoolSize" value="20" />
        <property name="maxIdleTime" value="60" />
        <property name="reapTimeout" value="20000" />
        <property name="maxLifetime" value="60000"/>
        <property name="testQuery" value="select 1 from dual" />
    </bean>-->
    <bean id="paginationIntercepter" class="com.zhph.base.pagination.PaginationIntercepter"><!-- 自动分页插件 -->
        <property name="dialect">
            <bean class="com.zhph.base.pagination.dialect.OracleDialect"></bean>
        </property>
        <property name="pageSqlId" value=".*getListFor.*" />
    </bean>

    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="mapperLocations" value="classpath:mapping/**/*.xml" />
        <property name="plugins"><!-- 注入分页插件 -->
            <array>
                <ref bean="paginationIntercepter"/>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zhph.**.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


    <!-- 事务配置 -->
    <bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
          init-method="init" destroy-method="shutdownForce">
        <constructor-arg>
            <props>
                <prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory</prop>
            </props>
        </constructor-arg>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"  init-method="init" destroy-method="close" depends-on="userTransactionService">
        <property name="forceShutdown" value="false" />
    </bean>
    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="userTransactionService">
        <property name="transactionTimeout" value="600" />
    </bean>
    <bean id="jtaTransactionManager"  class="org.springframework.transaction.jta.JtaTransactionManager"   depends-on="userTransactionService">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
    </bean>


    <tx:annotation-driven transaction-manager="jtaTransactionManager"   proxy-target-class="true"/>


</beans>